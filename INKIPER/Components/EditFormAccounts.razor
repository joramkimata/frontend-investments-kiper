@using MudBlazor
@using INKIPER.Dtos
@using INKIPER.GraphQL
@using INKIPER.GraphQL.Inputs.Accounts
@using INKIPER.GraphQL.QLs.Accounts
@using INKIPER.GraphQL.Responses.Accounts

@inject GraphqlService GraphqlService

<style>
    :root {
        --mud-palette-primary: #ccc;
    }
</style>

<MudDialog>
    <DialogContent>
        <Loader Loading="@_loading"/>
        <MudForm Model="@AccountsDto" @ref="_form" @bind-IsValid="@_success">

            <MudTextField
                @bind-Value="AccountsDto.AccountName"
                Label="Account Name"
                Immediate="true"
                Variant="Variant.Outlined"
                HelperText="Enter Account Name"
                Required="true"
                RequiredError="Account Name is required!">
            </MudTextField>

            <MudTextField
                @bind-Value="AccountsDto.AccountNumber"
                Label="Account Number"
                Variant="Variant.Outlined"
                Immediate="true"
                HelperText="Enter Account Number"
                Required="true"
                RequiredError="Account Number is required!">
            </MudTextField>

            <MudTextField @bind-Value="AccountsDto.AccountDescription"
                          Label="Account Description"
                          Variant="Variant.Outlined" Lines="5"
                          HelperText="Enter Account Description if any!">
            </MudTextField>

            <MudButton  StartIcon="@Icons.TwoTone.Save" OnClick="async () => await OnSubmit()" Disabled="@(!_success)" Style="background-color: #44bc59; height: 50px; margin-bottom: 20px; margin-top: 25px" Size="Size.Large" ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save Changes</MudButton>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    
    [Parameter]
    public Action OnSaveForm { get; set; }
    
    bool _success;
    bool _loading;
    MudForm _form = new();
    private AccountsDto AccountsDto = new();

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    
    private async Task OnSubmit()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            _loading = true;
            _success = false;

            var response = await GraphqlService.ExecGraphQLMutation<CreateAccountsResponse>(AccountsGraphQLs.CREATE_ACCOUNTS, new
            {
                input = new AccountsInput()
                {
                    name = AccountsDto.AccountName,
                    accountNumber = AccountsDto.AccountNumber,
                    description = AccountsDto.AccountDescription
                }
            });
            
            _loading = false;
            
            GraphqlService.Notify(response.createAccounts, () =>
            {
                MudDialog.Close();
            });
            
            OnSaveForm.Invoke();
        }
    }

}